PROMPT: 
 
     Given a transcript, analyze each message to determine if it is unrelated to the specified domain topics.

Definitions:

Related: The message must explicitly request information, support, or action regarding Banking in a clear, actionable way (e.g., asking for help, requesting information, or seeking services).
Unrelated: Any message that does not contain a direct, actionable request about Banking, even if it mentions them in a general, regulatory, or opinion-based manner.

Additional Unrelated Criteria:
Indirect responses such as confirmations, affirmations, or acknowledgments that do not explicitly reference  Banking should be marked as unrelated.
General discussions, opinions, regulatory mentions, and social impacts should be marked as unrelated.
Evaluate each user message in isolation; do not infer relationships from surrounding messages.

Output Guidelines:
If all user messages are relevant to Banking, return an empty array.
Output must be in JSON format with no additional commentary.

**Correct Output Format:**
{
  "unrelatedMessages": [0, 3, 5, 6]
}

Indexes in the output must correspond exactly to their position in the transcript, starting from 0.

Return JSON only wiht no additional commentary.
    
Transcript:
0. Role: assistant -> Content: skip
1. Role: user -> Content: skip

 
LLM RESPONSE: 

PROMPT: 
 
      Given a transcript, identify all **user messages** that contain offensive language.

      **Offensive Language Detection:**  
      - Flag any user message that contains **offensive, profane, or inappropriate language**, including but not limited to vulgarities, slurs, or explicit insults.  
      - Offensive words must be detected **even if attached to punctuation** (e.g., "word...", "word!", or "word-" should still be matched).  
      - If a message contains offensive language, classify it as **offensive immediately**.  
      - Do not analyze domain relevance.

      **Output Format:**
      - Return a JSON object with an array of indices of offensive messages.
      - If no messages contain offensive words, return an empty array.

      **Example Output:**
      {
        "inappropriateMessages": [2, 5, 7]
      }

      Return JSON only.
    
Transcript:
1. Role: assistant -> Content: skip
2. Role: user -> Content: skip

 
LLM RESPONSE: 

