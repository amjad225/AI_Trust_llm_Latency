{
  "filename": "test-scenario.json",
  "name": "Comprehensive Objective Testing Demo",
  "description": "Complete demonstration of all objective testing features including turn matching, blocking objectives, failure handling, and multi-persona testing - created for team demo on 27/06/2025",
  "domain": "Chatbot testing software support",
  "compositeObjectives": [
    {
      "name": "Basic Conversation Flow Demo",
      "description": "Demonstrates fundamental conversation flow with greeting, questions, and farewell - showcases turn matching scopes and evaluation strategies",
      "persona": "Friendly Business Customer",
      "userVariables": {
        "customerName": "James Bond",
        "companyName": "Cyara",
        "role": "QA Manager",
        "urgency": "normal"
      },
      "subObjectives": [
        {
          "description": "The chatbot should greet me warmly",
          "instructions": "Say hello using the word 'howdy' and expect a warm, professional greeting that acknowledges you appropriately.",
          "isBlocking": false,
          "onFailure": null,
          "turnMatching": {
            "scope": "any",
            "evaluationStrategy": "first_match",
            "recentTurnCount": 5
          }
        },
        {
          "description": "The chatbot should ask if we need assistance",
          "instructions": "Continue the conversation naturally and expect the bot to offer help or ask what you need assistance with.",
          "isBlocking": false,
          "onFailure": null,
          "turnMatching": {
            "scope": "recent",
            "evaluationStrategy": "first_match",
            "recentTurnCount": 3
          }
        },
        {
          "description": "Bot acknowledges my introduction and uses my preferred name",
          "instructions": "Introduce yourself and specifically request to be called 'Mr. Bond'. Expect the bot to acknowledge this and use your preferred form of address.",
          "isBlocking": false,
          "onFailure": null,
          "turnMatching": {
            "scope": "any",
            "evaluationStrategy": "best_match",
            "recentTurnCount": 8
          }
        },
        {
          "description": "Bot provides detailed information about LLM-powered chatbot testing",
          "instructions": "Ask specifically about LLM-powered chatbot testing and expect comprehensive, technical information about testing methodologies, tools, and best practices.",
          "isBlocking": true,
          "onFailure": "escalate_to_human",
          "turnMatching": {
            "scope": "current",
            "evaluationStrategy": "best_match",
            "recentTurnCount": 5
          }
        },
        {
          "description": "Bot provides comprehensive information about Cyara company",
          "instructions": "Ask about the company and expect detailed information about services, focus areas, and relevance to chatbot testing.",
          "isBlocking": false,
          "onFailure": null,
          "turnMatching": {
            "scope": "recent",
            "evaluationStrategy": "latest_match",
            "recentTurnCount": 4
          }
        },
        {
          "description": "Bot responds appropriately to emotional farewell",
          "instructions": "Say goodbye in a frustrated or angry manner and expect the bot to handle your emotional state professionally while providing appropriate closure.",
          "isBlocking": false,
          "onFailure": null,
          "turnMatching": {
            "scope": "current",
            "evaluationStrategy": "first_match",
            "recentTurnCount": 5
          }
        }
      ]
    },
    {
      "name": "Advanced Features & Edge Cases",
      "description": "Demonstrates blocking objectives, failure handling, and complex turn matching scenarios for comprehensive testing validation",
      "persona": "Technical Customer with Urgent Needs",
      "userVariables": {
        "customerName": "Sarah Connor",
        "companyName": "Tech Solutions Inc",
        "role": "CTO",
        "urgency": "critical",
        "expertise": "high"
      },
      "subObjectives": [
        {
          "description": "Bot recognizes high-priority technical customer",
          "instructions": "Identify yourself and expect the bot to recognize your technical expertise and prioritize your request appropriately.",
          "isBlocking": true,
          "onFailure": "offer_alternatives",
          "turnMatching": {
            "scope": "any",
            "evaluationStrategy": "best_match",
            "recentTurnCount": 10
          }
        },
        {
          "description": "Bot provides advanced technical documentation",
          "instructions": "Request technical documentation for API integration and testing frameworks. Expect detailed, technical responses suitable for your expertise level.",
          "isBlocking": true,
          "onFailure": "escalate_to_human",
          "turnMatching": {
            "scope": "current",
            "evaluationStrategy": "best_match",
            "recentTurnCount": 5
          }
        },
        {
          "description": "Bot maintains context across complex multi-part questions",
          "instructions": "Ask a complex, multi-part question about integration challenges and expect the bot to address all parts while maintaining context throughout recent turns.",
          "isBlocking": false,
          "onFailure": null,
          "turnMatching": {
            "scope": "recent",
            "evaluationStrategy": "best_match",
            "recentTurnCount": 6
          }
        }
      ]
    },
    {
      "name": "Error Handling & Recovery Demo",
      "description": "Tests system resilience with challenging scenarios, confusion handling, and graceful degradation patterns",
      "persona": "Confused New User",
      "userVariables": {
        "customerName": "Alex Johnson",
        "companyName": "StartupCorp",
        "role": "Founder",
        "experience": "beginner",
        "confusion_level": "high"
      },
      "subObjectives": [
        {
          "description": "Bot handles ambiguous requests gracefully",
          "instructions": "Ask a very vague question like 'I need help with stuff' and expect the bot to ask clarifying questions to understand your needs.",
          "isBlocking": false,
          "onFailure": null,
          "turnMatching": {
            "scope": "current",
            "evaluationStrategy": "first_match", 
            "recentTurnCount": 5
          }
        },
        {
          "description": "Bot recovers from misunderstandings",
          "instructions": "Correct a previous misunderstanding and expect the bot to acknowledge the correction and adjust its response appropriately.",
          "isBlocking": false,
          "onFailure": null,
          "turnMatching": {
            "scope": "recent",
            "evaluationStrategy": "latest_match",
            "recentTurnCount": 3
          }
        },
        {
          "description": "Bot offers appropriate escalation when needed",
          "instructions": "Express continued confusion and frustration. Expect the bot to eventually offer human assistance or alternative support channels.",
          "isBlocking": true,
          "onFailure": "escalate_to_human",
          "turnMatching": {
            "scope": "any",
            "evaluationStrategy": "latest_match",
            "recentTurnCount": 8
          }
        }
      ]
    }
  ]
}