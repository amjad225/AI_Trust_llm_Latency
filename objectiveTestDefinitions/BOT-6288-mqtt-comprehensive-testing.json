{
  "filename": "BOT-6288-mqtt-comprehensive-testing.json",
  "name": "BOT-6288: Comprehensive MQTT Testing Scenarios",
  "description": "Comprehensive test suite for MQTT broker functionality covering multiple personas, edge cases, and error scenarios to validate BOT-6288 fix thoroughly.",
  "domain": "general",
  "compositeObjectives": [
    {
      "name": "MQTT Connectivity Testing",
      "description": "Comprehensive MQTT broker connectivity testing covering ports, protocols, and connection validation",
      "persona": "MQTT Developer Testing Connectivity",
      "userVariables": {
        "testType": "connectivity",
        "brokerUrl": "http://abc-mq-company.com",
        "ports": [1883, 1884]
      },
      "subObjectives": [
        {
          "description": "Bot provides step-by-step MQTT broker connectivity testing guidance",
          "instructions": "Ask for comprehensive guidance on testing MQTT broker connectivity to http://abc-mq-company.com on ports 1883 and 1884. Expect detailed instructions including tools, commands, and troubleshooting steps.",
          "isBlocking": false,
          "onFailure": null,
          "turnMatching": {
            "scope": "current",
            "evaluationStrategy": "best_match",
            "recentTurnCount": 5
          }
        },
        {
          "description": "Bot explains port differences and security implications",
          "instructions": "Ask about the differences between ports 1883 and 1884 for MQTT and their security implications. Expect technical explanations about standard vs secure connections.",
          "isBlocking": false,
          "onFailure": null,
          "turnMatching": {
            "scope": "recent",
            "evaluationStrategy": "first_match",
            "recentTurnCount": 3
          }
        }
      ]
    },
    {
      "name": "MQTT Message Publishing Testing",
      "description": "Comprehensive message publishing tests with different parameter combinations and QOS levels",
      "persona": "QA Engineer Testing Message Publishing",
      "userVariables": {
        "testType": "publishing",
        "messageFormat": "json",
        "testCases": "multiple"
      },
      "subObjectives": [
        {
          "description": "Bot provides multiple test cases for MQTT message publishing with different parameter combinations",
          "instructions": "Request specific test cases for MQTT publishing with: 1) Only message and QOS, 2) Only topic and message, 3) Only topic and QOS, 4) All parameters missing, 5) Invalid parameter values. Expect comprehensive test scenarios.",
          "isBlocking": false,
          "onFailure": null,
          "turnMatching": {
            "scope": "current",
            "evaluationStrategy": "best_match",
            "recentTurnCount": 5
          }
        },
        {
          "description": "Bot explains QOS levels and their implications for testing",
          "instructions": "Ask about different QOS levels (0, 1, 2) and how they affect testing strategies. Expect detailed explanations of reliability guarantees and testing considerations.",
          "isBlocking": false,
          "onFailure": null,
          "turnMatching": {
            "scope": "current",
            "evaluationStrategy": "first_match",
            "recentTurnCount": 5
          }
        },
        {
          "description": "Bot provides error handling test scenarios for publishing",
          "instructions": "Ask for test cases covering error scenarios like network failures, authentication issues, and invalid topics. Expect comprehensive error testing guidance.",
          "isBlocking": false,
          "onFailure": null,
          "turnMatching": {
            "scope": "any",
            "evaluationStrategy": "best_match",
            "recentTurnCount": 8
          }
        }
      ]
    },
    {
      "name": "MQTT Subscription Testing",
      "description": "Subscription testing with topic patterns, wildcards, message persistence, and performance validation",
      "persona": "System Administrator Testing Subscriptions",
      "userVariables": {
        "testType": "subscription",
        "topicPattern": "wildcard",
        "monitoring": "enabled"
      },
      "subObjectives": [
        {
          "description": "Bot provides subscription testing methodology with topic patterns",
          "instructions": "Ask for guidance on testing MQTT subscriptions with various topic patterns including wildcards, hierarchical topics, and filtered subscriptions. Expect detailed testing approaches.",
          "isBlocking": false,
          "onFailure": null,
          "turnMatching": {
            "scope": "current",
            "evaluationStrategy": "best_match",
            "recentTurnCount": 5
          }
        },
        {
          "description": "Bot explains message persistence and delivery testing",
          "instructions": "Ask about testing message persistence, retained messages, and delivery guarantees for MQTT subscriptions. Expect technical details about testing these features.",
          "isBlocking": false,
          "onFailure": null,
          "turnMatching": {
            "scope": "recent",
            "evaluationStrategy": "first_match", 
            "recentTurnCount": 4
          }
        },
        {
          "description": "Bot provides performance and load testing recommendations",
          "instructions": "Request guidance on load testing MQTT subscriptions including concurrent connections, message throughput, and resource monitoring. Expect comprehensive performance testing strategies.",
          "isBlocking": false,
          "onFailure": null,
          "turnMatching": {
            "scope": "any",
            "evaluationStrategy": "latest_match",
            "recentTurnCount": 6
          }
        }
      ]
    },
    {
      "name": "MQTT Security Testing",
      "description": "Comprehensive security testing for MQTT including authentication, encryption, and certificate-based validation",
      "persona": "Security Tester Evaluating MQTT Security",
      "userVariables": {
        "testType": "security",
        "authMethod": "certificate",
        "encryption": "tls"
      },
      "subObjectives": [
        {
          "description": "Bot provides security testing checklist for MQTT brokers",
          "instructions": "Ask for a comprehensive security testing checklist for MQTT brokers including authentication, authorization, encryption, and vulnerability assessment. Expect detailed security testing guidance.",
          "isBlocking": true,
          "onFailure": null,
          "turnMatching": {
            "scope": "current",
            "evaluationStrategy": "best_match",
            "recentTurnCount": 5
          }
        },
        {
          "description": "Bot explains certificate-based authentication testing",
          "instructions": "Request specific guidance on testing certificate-based authentication for MQTT connections including client certificates, CA validation, and certificate revocation testing.",
          "isBlocking": false,
          "onFailure": null,
          "turnMatching": {
            "scope": "recent",
            "evaluationStrategy": "first_match",
            "recentTurnCount": 4
          }
        }
      ]
    }
  ]
} 