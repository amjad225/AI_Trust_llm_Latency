{
  "filename": "BOT-6287-comprehensive-api-testing.json",
  "name": "BOT-6287: Comprehensive API Testing Scenarios",
  "description": "Comprehensive test suite for API endpoint testing covering multiple HTTP methods, status codes, authentication, and error scenarios to validate BOT-6287 fix thoroughly.",
  "domain": "general",
  "compositeObjectives": [
    {
      "name": "Functional API Testing",
      "description": "Comprehensive functional testing of API endpoints covering GET, POST, PUT, DELETE methods with status code validation",
      "persona": "API Quality Assurance Engineer",
      "userVariables": {
        "testType": "functional",
        "endpoint": "http://abc.com/test/api/v1",
        "methods": ["GET", "POST", "PUT", "DELETE"]
      },
      "subObjectives": [
        {
          "description": "Bot provides comprehensive GET method testing strategy with status code validation",
          "instructions": "Request detailed guidance on testing GET endpoints including status code validation (200, 404, 401, 500), response time testing, header validation, and query parameter handling. Expect thorough testing methodology for GET requests.",
          "isBlocking": false,
          "onFailure": null,
          "turnMatching": {
            "scope": "current",
            "evaluationStrategy": "best_match",
            "recentTurnCount": 5
          }
        },
        {
          "description": "Bot explains POST method testing with various body types and empty payload scenarios",
          "instructions": "Ask for comprehensive POST method testing including empty body {}, JSON payloads, form data, and file uploads. Request guidance on validating 200 OK responses and handling different content types.",
          "isBlocking": false,
          "onFailure": null,
          "turnMatching": {
            "scope": "current",
            "evaluationStrategy": "best_match",
            "recentTurnCount": 5
          }
        },
        {
          "description": "Bot provides error scenario testing and negative test cases",
          "instructions": "Request guidance on testing error scenarios including malformed requests, authentication failures, rate limiting, and server errors. Expect comprehensive negative testing strategies.",
          "isBlocking": false,
          "onFailure": null,
          "turnMatching": {
            "scope": "recent",
            "evaluationStrategy": "first_match",
            "recentTurnCount": 4
          }
        }
      ]
    },
    {
      "name": "Performance API Testing",
      "description": "Load and stress testing for API endpoints to evaluate performance, throughput, and resource utilization",
      "persona": "Performance Testing Specialist",
      "userVariables": {
        "testType": "performance",
        "loadPattern": "stress",
        "concurrency": "high"
      },
      "subObjectives": [
        {
          "description": "Bot provides load testing methodology for API endpoints",
          "instructions": "Ask for guidance on load testing API endpoints including concurrent request handling, response time thresholds, throughput measurement, and resource utilization monitoring. Expect detailed performance testing strategies.",
          "isBlocking": false,
          "onFailure": null,
          "turnMatching": {
            "scope": "current",
            "evaluationStrategy": "best_match",
            "recentTurnCount": 5
          }
        },
        {
          "description": "Bot explains stress testing scenarios and breaking point identification",
          "instructions": "Request guidance on stress testing including gradual load increase, breaking point identification, system recovery testing, and performance degradation analysis.",
          "isBlocking": false,
          "onFailure": null,
          "turnMatching": {
            "scope": "current",
            "evaluationStrategy": "first_match",
            "recentTurnCount": 5
          }
        }
      ]
    },
    {
      "name": "Security API Testing",
      "description": "Security vulnerability assessment for API endpoints including authentication, authorization, and OWASP compliance",
      "persona": "Security Testing Expert",
      "userVariables": {
        "testType": "security",
        "authType": "bearer_token",
        "vulnerabilities": "owasp_top10"
      },
      "subObjectives": [
        {
          "description": "Bot provides API security testing checklist and vulnerability assessment",
          "instructions": "Ask for comprehensive API security testing including authentication bypass, injection attacks, authorization flaws, and data exposure vulnerabilities. Expect detailed security testing methodology.",
          "isBlocking": true,
          "onFailure": null,
          "turnMatching": {
            "scope": "current",
            "evaluationStrategy": "best_match",
            "recentTurnCount": 5
          }
        },
        {
          "description": "Bot explains authentication and authorization testing strategies",
          "instructions": "Request guidance on testing API authentication mechanisms including token validation, session management, role-based access control, and privilege escalation testing.",
          "isBlocking": false,
          "onFailure": null,
          "turnMatching": {
            "scope": "recent",
            "evaluationStrategy": "first_match",
            "recentTurnCount": 4
          }
        }
      ]
    },
    {
      "name": "Integration API Testing",
      "description": "End-to-end integration testing for API endpoints including service dependencies, data flow validation, and contract testing",
      "persona": "Integration Testing Coordinator",
      "userVariables": {
        "testType": "integration",
        "dependencies": "multiple_services",
        "dataFlow": "bidirectional"
      },
      "subObjectives": [
        {
          "description": "Bot provides end-to-end API integration testing methodology",
          "instructions": "Ask for guidance on testing API integrations including service dependencies, data flow validation, error propagation, and transaction consistency. Expect comprehensive integration testing strategies.",
          "isBlocking": false,
          "onFailure": null,
          "turnMatching": {
            "scope": "current",
            "evaluationStrategy": "best_match",
            "recentTurnCount": 5
          }
        },
        {
          "description": "Bot explains contract testing and API versioning validation",
          "instructions": "Request guidance on API contract testing including schema validation, backward compatibility, version migration testing, and breaking change detection.",
          "isBlocking": false,
          "onFailure": null,
          "turnMatching": {
            "scope": "any",
            "evaluationStrategy": "latest_match",
            "recentTurnCount": 6
          }
        }
      ]
    }
  ]
}
