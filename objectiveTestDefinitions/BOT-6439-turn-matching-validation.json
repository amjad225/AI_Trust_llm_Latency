{
  "filename": "BOT-6439-turn-matching-validation.json",
  "name": "BOT-6439: Comprehensive Turn Matching Validation",
  "description": "Comprehensive validation of turn matching system after BOT-6439 fix. Tests all combinations of scope (current/recent/any) and strategy (first_match/best_match/latest_match) to ensure proper objective detection.",
  "domain": "technical support",
  "compositeObjectives": [
    {
      "name": "First_Match Strategy Validation",
      "description": "Validate that first_match correctly identifies earliest satisfaction across different scopes",
      "persona": "Tech support customer",
      "userVariables": {
        "customerName": "Alex Thompson",
        "issueType": "greeting_and_support"
      },
      "subObjectives": [
        {
          "description": "Bot greets customer appropriately",
          "instructions": "Start with 'Hello, I need help' and expect a professional greeting that acknowledges your request for help.",
          "isBlocking": false,
          "onFailure": null,
          "turnMatching": {
            "scope": "recent",
            "evaluationStrategy": "first_match",
            "recentTurnCount": 3
          }
        },
        {
          "description": "Bot asks for problem details",
          "instructions": "Mention you have a technical issue and expect the bot to ask for specific details about your problem.",
          "isBlocking": false,
          "onFailure": null,
          "turnMatching": {
            "scope": "recent",
            "evaluationStrategy": "first_match",
            "recentTurnCount": 2
          }
        },
        {
          "description": "Bot provides troubleshooting steps",
          "instructions": "Describe a common technical problem and expect the bot to provide helpful troubleshooting steps.",
          "isBlocking": false,
          "onFailure": null,
          "turnMatching": {
            "scope": "current",
            "evaluationStrategy": "first_match"
          }
        }
      ]
    },
    {
      "name": "Best_Match Strategy Validation",
      "description": "Validate that best_match selects highest confidence result",
      "persona": "Quality-focused customer",
      "userVariables": {
        "customerName": "Jordan Lee",
        "priorityLevel": "high"
      },
      "subObjectives": [
        {
          "description": "Bot demonstrates excellent customer service",
          "instructions": "Engage in conversation and expect the bot to show excellent customer service throughout multiple interactions.",
          "isBlocking": false,
          "onFailure": null,
          "turnMatching": {
            "scope": "any",
            "evaluationStrategy": "best_match"
          }
        },
        {
          "description": "Bot provides accurate information",
          "instructions": "Ask for specific technical information and expect accurate, detailed responses.",
          "isBlocking": false,
          "onFailure": null,
          "turnMatching": {
            "scope": "recent",
            "evaluationStrategy": "best_match",
            "recentTurnCount": 4
          }
        }
      ]
    },
    {
      "name": "Latest_Match Strategy Validation",
      "description": "Validate that latest_match selects most recent satisfaction",
      "persona": "Progressive customer",
      "userVariables": {
        "customerName": "Taylor Swift",
        "timeline": "urgent"
      },
      "subObjectives": [
        {
          "description": "Bot maintains professional tone throughout",
          "instructions": "Have an extended conversation with various questions and expect the bot to maintain professionalism in all responses, with latest_match finding the most recent example.",
          "isBlocking": false,
          "onFailure": null,
          "turnMatching": {
            "scope": "any",
            "evaluationStrategy": "latest_match"
          }
        },
        {
          "description": "Bot shows continuous improvement in responses",
          "instructions": "Ask similar questions multiple times and expect the bot's responses to maintain or improve quality, with latest_match selecting the newest good response.",
          "isBlocking": false,
          "onFailure": null,
          "turnMatching": {
            "scope": "recent",
            "evaluationStrategy": "latest_match",
            "recentTurnCount": 6
          }
        }
      ]
    },
    {
      "name": "Scope Comparison: Same Objective, Different Scopes",
      "description": "Test the exact same objective with different scopes to ensure consistent behavior",
      "persona": "Comparison tester",
      "userVariables": {
        "testType": "scope_comparison"
      },
      "subObjectives": [
        {
          "description": "Bot greets user (tested with 'current' scope)",
          "instructions": "Say 'Hi there!' and expect a greeting. This tests current turn evaluation.",
          "isBlocking": false,
          "onFailure": null,
          "turnMatching": {
            "scope": "current",
            "evaluationStrategy": "first_match"
          }
        },
        {
          "description": "Bot greets user (tested with 'recent' scope)",
          "instructions": "Continue conversation after greeting. The original greeting should still be detectable with recent scope.",
          "isBlocking": false,
          "onFailure": null,
          "turnMatching": {
            "scope": "recent",
            "evaluationStrategy": "first_match",
            "recentTurnCount": 3
          }
        },
        {
          "description": "Bot greets user (tested with 'any' scope)",
          "instructions": "Continue extended conversation. The original greeting should always be detectable with 'any' scope.",
          "isBlocking": false,
          "onFailure": null,
          "turnMatching": {
            "scope": "any",
            "evaluationStrategy": "first_match"
          }
        }
      ]
    },
    {
      "name": "Edge Case: Very Long Conversation",
      "description": "Test turn matching in an extended conversation to ensure performance and accuracy",
      "persona": "Thorough tester",
      "userVariables": {
        "conversationLength": "extended",
        "testDepth": "comprehensive"
      },
      "subObjectives": [
        {
          "description": "Bot provides initial welcome message",
          "instructions": "Start with 'Hello, I'm here for comprehensive testing' and expect a welcoming response.",
          "isBlocking": false,
          "onFailure": null,
          "turnMatching": {
            "scope": "any",
            "evaluationStrategy": "first_match"
          }
        },
        {
          "description": "Bot maintains conversation context",
          "instructions": "Reference earlier parts of the conversation and expect the bot to maintain context appropriately.",
          "isBlocking": false,
          "onFailure": null,
          "turnMatching": {
            "scope": "recent",
            "evaluationStrategy": "best_match",
            "recentTurnCount": 4
          }
        },
        {
          "description": "Bot handles topic transitions smoothly",
          "instructions": "Change topics several times during the conversation and expect smooth transitions.",
          "isBlocking": false,
          "onFailure": null,
          "turnMatching": {
            "scope": "recent",
            "evaluationStrategy": "latest_match",
            "recentTurnCount": 3
          }
        },
        {
          "description": "Bot provides helpful closing interaction",
          "instructions": "Indicate you're ready to end the conversation and expect a helpful closing response.",
          "isBlocking": false,
          "onFailure": null,
          "turnMatching": {
            "scope": "current",
            "evaluationStrategy": "first_match"
          }
        }
      ]
    }
  ]
} 